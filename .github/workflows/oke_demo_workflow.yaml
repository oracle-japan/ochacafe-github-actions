name: OKE GitHub Actions Workflow Demo

on:
  push:
    paths:
      - "oke-app/**"
  workflow_dispatch:

jobs:
  testing-backend-job:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: test
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test_db
          TZ: "Asia/Tokyo"
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h 127.0.0.1" --health-interval 20s --health-timeout 10s --health-retries 10

    steps:
      - name: Start message
        run: echo "Starting Golang Test"

      - uses: actions/checkout@v3
        name: Checkout

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.1"

      - name: Run
        run: |
          cd oke-app/backend-app
          go run main.go &
        env:
          DB_USER: root
          DB_PASSWORD: root
          DB_HOST: localhost
          DB_NAME: test_db

      # curl叩くだけ
      - name: Run Test and Check Result
        run: |
          `curl "http://127.0.0.1:8080/items" -s -o /dev/null -w "%{http_code}"`

      - name: Finish message
        run: echo "Finished Golang Test"

  testing-frontent-job:
    runs-on: ubuntu-latest

    steps:
      - name: Start message
        run: echo "Starting Nextjs Test"

      - uses: actions/checkout@v3
        name: Checkout

      - name: Run
        run: |
          cd oke-app/frontend-app
          npm install
          npm run dev &

      # curl叩くだけ
      - name: Run Test and Check Result
        run: |
          `curl "http://127.0.0.1:3000" -s -o /dev/null -w "%{http_code}"`

      - name: Finish message
        run: echo "Finished Nextjs Test"

  container-image-build-and-push-golang:
    needs: testing-backend-job
    runs-on: ubuntu-latest

    steps:
      - name: Start message
        run: echo "Starting Build and Push Container Image"

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache/backend
          key: ${{ runner.os }}-oke-app-${{ hashFiles('oke-app/backend-app/**') }}
          restore-keys: |
            ${{ runner.os }}-oke-app-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Backend App image and Push ghcr
        uses: docker/build-push-action@v2
        with:
          context: oke-app/backend-app
          file: oke-app/backend-app/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/oke-app-golang:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache/backend
          cache-to: type=local,dest=/tmp/.buildx-cache/backend,mode=max

  container-image-build-and-push-nextjs:
    needs: testing-frontent-job
    runs-on: ubuntu-latest

    steps:
      - name: Start message
        run: echo "Starting Build and Push Container Image(nextjs)"

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache/frontend
          key: ${{ runner.os }}-oke-app-${{ hashFiles('oke-app/frontend-app/**') }}
          restore-keys: |
            ${{ runner.os }}-oke-app-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and Push ghcr
        uses: docker/build-push-action@v2
        with:
          context: oke-app/frontend-app
          file: oke-app/frontend-app/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/oke-app-nextjs:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache/frontend
          cache-to: type=local,dest=/tmp/.buildx-cache/frontend,mode=max

      - name: Finish message
        run: echo "Finished Build and Push Container Image(nextjs)"

  deploy-to-oke:
    uses: tniita/ochacafe-github-actions/.github/workflows/oke_demo_deploy.yaml@main
    needs:
      [
        container-image-build-and-push-golang,
        container-image-build-and-push-nextjs,
      ]
